{"version":3,"sources":["Components/Header.js","Components/Section.js","Components/Loader.js","Components/Message.js","assets/noPosterSmall.jpg","Components/Poster.js","Routes/Home/HomePresenter.js","Components/API.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["NavHeader","styled","header","List","ul","Item","li","props","current","NavLink","Link","Header","withRouter","pathname","location","to","Container","div","Title","span","Grid","Section","title","children","Loader","role","aria-label","Text","color","Message","text","Image","bgUrl","Rating","ImageContainer","Year","Poster","id","imageURL","rating","year","isMovie","noPoster","length","substring","HomePresenter","nowPlaying","upcoming","popular","loading","error","Helmet","map","movie","poster_path","original_title","vote_average","release_date","API","axios","create","baseURL","params","api_key","language","MovieAPI","get","append_to_response","term","query","TVAPI","HomeContainer","useState","setNowPlaying","setUpcoming","setPopular","setLoading","setError","useEffect","a","nowPlayingMovies","data","results","upcomingMovies","popularMovies","getMovieDatas","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","handleInput","onSubmit","type","placeholder","value","onChange","style","cursor","program","original_name","first_air_date","SearchContainer","setMovieResults","setTVResults","setSearchTerm","searchByTerm","event","preventDefault","target","TVPresenter","airingToday","topRated","TVContainer","setAiringToday","setTopRated","airingTodayTVs","topRatedTVs","popularTVs","getTVDatas","Backdrop","bgImg","Content","Cover","Data","h3","InfoContainer","InfoItem","Divider","Overview","p","DetailPresenter","result","backdrop_path","runtime","episode_run_time","genres","genre","index","name","overview","DetailContainer","setResult","match","push","history","includes","console","log","getData","parsedId","Number","isNaN","errorCheck","AppRouter","exact","path","component","Home","Search","TV","Detail","from","GlobalStyles","createGlobalStyle","reset","App","ReactDOM","render","document","getElementById"],"mappings":"0OAGMA,EAAYC,IAAOC,OAAV,gRAeTC,EAAOF,IAAOG,GAAV,8CAIJC,EAAOJ,IAAOK,GAAV,wJAIJ,SAACC,GAAD,OAAYA,EAAMC,QAAU,UAAY,iBAIxCC,EAAUR,YAAOS,IAAPT,CAAH,mHAuBEU,EAhBAC,aAAW,gBAAeC,EAAf,EAAGC,SAAYD,SAAf,OACxB,cAACb,EAAD,UACE,eAACG,EAAD,WACE,cAACE,EAAD,CAAMG,QAAsB,MAAbK,EAAf,SACE,cAACJ,EAAD,CAASM,GAAG,IAAZ,sBAEF,cAACV,EAAD,CAAMG,QAAsB,QAAbK,EAAf,SACE,cAACJ,EAAD,CAASM,GAAG,MAAZ,kBAEF,cAACV,EAAD,CAAMG,QAAsB,YAAbK,EAAf,SACE,cAACJ,EAAD,CAASM,GAAG,UAAZ,8B,wCC5CFC,EAAYf,IAAOgB,IAAV,kFAMTC,GAAQjB,IAAOkB,KAAV,qEAKLC,GAAOnB,IAAOgB,IAAV,0IAwBKI,GAjBC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,eAACP,EAAD,WACE,cAACE,GAAD,UAAQI,IACR,cAACF,GAAD,UAAOG,QCvBPP,GAAYf,IAAOgB,IAAV,qJAmBAO,GAVA,WACb,OACE,cAAC,GAAD,UACE,sBAAMC,KAAK,MAAMC,aAAW,UAA5B,uBCXAV,GAAYf,IAAOgB,IAAV,2FAMTU,GAAO1B,IAAOkB,KAAV,oFAGC,SAACZ,GAAD,OAAWA,EAAMqB,SAgBbC,GAbC,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,KAAMF,EAAY,EAAZA,MACvB,OACE,cAAC,GAAD,UACE,cAACD,GAAD,CAAMC,MAAOA,EAAb,SAAqBE,OClBZ,OAA0B,0CCKnCd,GAAYf,IAAOgB,IAAV,gDAITc,GAAQ9B,IAAOgB,IAAV,0MACe,SAACV,GAAD,gBAAcA,EAAMyB,UAQxCC,GAAShC,IAAOkB,KAAV,qIAQNe,GAAiBjC,IAAOgB,IAAV,uKAIdc,GAGAE,IAMAf,GAAQjB,IAAOkB,KAAV,qKASLgB,GAAOlC,IAAOkB,KAAV,sFAwCKiB,GAnCA,SAAC,GAAoD,IAAlDC,EAAiD,EAAjDA,GAAIC,EAA6C,EAA7CA,SAAUhB,EAAmC,EAAnCA,MAAOiB,EAA4B,EAA5BA,OAAQC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QACnD,OACE,cAAC,IAAD,CAAM1B,GAAI0B,EAAO,iBAAaJ,GAAb,cAA2BA,GAA5C,SACE,eAAC,GAAD,WACE,eAACH,GAAD,WACE,cAACH,GAAD,CACEC,MACEM,EAAQ,yCAAqCA,GAAaI,KAG9D,eAACT,GAAD,WACE,sBAAMR,KAAK,MAAMC,aAAW,SAA5B,oBADF,OAISa,EAJT,YAOF,cAAC,GAAD,UACGjB,EAAMqB,OAAS,GAAf,UAAuBrB,EAAMsB,UAAU,EAAG,IAA1C,OAAqDtB,IAExD,cAACa,GAAD,UAAOK,UCjETxB,GAAYf,IAAOgB,IAAV,8CA8EA4B,GA1EO,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,WAAYC,EAAwC,EAAxCA,SAAUC,EAA8B,EAA9BA,QAASC,EAAqB,EAArBA,QAASC,EAAY,EAAZA,MAC/D,OACE,qCACE,cAACC,EAAA,EAAD,UACE,uDAEDF,EACC,cAAC,GAAD,IAEA,eAAC,GAAD,YACa,OAAVH,QAAU,IAAVA,OAAA,EAAAA,EAAYH,QAAS,EACpB,cAAC,GAAD,CAASrB,MAAM,cAAf,SACGwB,EAAWM,KAAI,SAACC,GAAD,aACd,cAAC,GAAD,CAEEhB,GAAIgB,EAAMhB,GACVC,SAAUe,EAAMC,YAChBhC,MAAO+B,EAAME,eACbhB,OAAQc,EAAMG,aACdhB,KAAI,OAAEa,QAAF,IAAEA,GAAF,UAAEA,EAAOI,oBAAT,aAAE,EAAqBb,UAAU,EAAG,GACxCH,SAAS,GANJY,EAAMhB,SAUf,MACK,OAARU,QAAQ,IAARA,OAAA,EAAAA,EAAUJ,QAAS,EAClB,cAAC,GAAD,CAASrB,MAAM,kBAAf,SACGyB,EAASK,KAAI,SAACC,GAAD,aACZ,cAAC,GAAD,CAEEhB,GAAIgB,EAAMhB,GACVC,SAAUe,EAAMC,YAChBhC,MAAO+B,EAAME,eACbhB,OAAQc,EAAMG,aACdhB,KAAI,UAAEa,EAAMI,oBAAR,aAAE,EAAoBb,UAAU,EAAG,GACvCH,SAAS,GANJY,EAAMhB,SAUf,MACI,OAAPW,QAAO,IAAPA,OAAA,EAAAA,EAASL,QAAS,EACjB,cAAC,GAAD,CAASrB,MAAM,iBAAf,SACG0B,EAAQI,KAAI,SAACC,GAAD,aACX,cAAC,GAAD,CAEEhB,GAAIgB,EAAMhB,GACVC,SAAUe,EAAMC,YAChBhC,MAAO+B,EAAME,eACbhB,OAAQc,EAAMG,aACdhB,KAAI,UAAEa,EAAMI,oBAAR,aAAE,EAAoBb,UAAU,EAAG,GACvCH,SAAS,GANJY,EAAMhB,SAUf,KACHa,EAAQ,cAAC,GAAD,CAASpB,KAAMoB,EAAOtB,MAAM,YAAe,Y,SCjExD8B,G,QAAMC,EAAMC,OAAO,CACvBC,QAAS,gCACTC,OAAQ,CACNC,QAAS,mCACTC,SAAU,WAIDC,GACC,kBAAMP,GAAIQ,IAAI,sBADfD,GAED,kBAAMP,GAAIQ,IAAI,mBAFbD,GAGF,kBAAMP,GAAIQ,IAAI,kBAHZD,GAIE,SAAC5B,GAAD,OACXqB,GAAIQ,IAAJ,gBAAiB7B,GAAM,CACrByB,OAAQ,CACNK,mBAAoB,aAPfF,GAUH,SAACG,GAAD,OACNV,GAAIQ,IAAI,eAAgB,CACtBJ,OAAQ,CACNO,MAAOD,MAKFE,GACD,kBAAMZ,GAAIQ,IAAI,iBADbI,GAEF,kBAAMZ,GAAIQ,IAAI,eAFZI,GAGE,kBAAMZ,GAAIQ,IAAI,oBAHhBI,GAID,SAACjC,GAAD,OACRqB,GAAIQ,IAAJ,aAAc7B,GAAM,CAClByB,OAAQ,CACNK,mBAAoB,aAPfG,GAUH,SAACF,GAAD,OACNV,GAAIQ,IAAI,YAAa,CACnBJ,OAAQ,CACNO,MAAOD,MCvCAG,GCEO,WAAO,IAAD,EACUC,mBAAS,MADnB,mBACnB1B,EADmB,KACP2B,EADO,OAEMD,mBAAS,MAFf,mBAEnBzB,EAFmB,KAET2B,EAFS,OAGIF,mBAAS,MAHb,mBAGnBxB,EAHmB,KAGV2B,EAHU,OAIIH,oBAAS,GAJb,mBAInBvB,EAJmB,KAIV2B,EAJU,OAKAJ,mBAAS,IALT,mBAKnBtB,EALmB,KAKZ2B,EALY,KAkC1B,OA3BAC,qBAAU,YACW,uCAAG,sCAAAC,EAAA,6DACpBH,GAAW,GADS,kBAMRX,KANQ,uBAKCe,EALD,EAKhBC,KAAQC,QALQ,SASRjB,KATQ,uBAQCkB,EARD,EAQhBF,KAAQC,QARQ,UAYRjB,KAZQ,iBAWCmB,EAXD,EAWhBH,KAAQC,QAEVT,EAAcO,GACdN,EAAYS,GACZR,EAAWS,GAfO,kDAiBlBP,EAAS,qCAjBS,yBAmBlBD,GAAW,GAnBO,6EAAH,qDAuBnBS,KACC,IAGD,cAAC,GAAD,CACEvC,WAAYA,EACZC,SAAUA,EACVC,QAASA,EACTC,QAASA,EACTC,MAAOA,KCpCPlC,GAAYf,IAAOgB,IAAV,8CAITqE,GAAOrF,IAAOsF,KAAV,oDAIJC,GAAQvF,IAAOwF,MAAV,+DAoFIC,GA/ES,SAAC,GAQlB,IAPLC,EAOI,EAPJA,aACAC,EAMI,EANJA,UACAC,EAKI,EALJA,WACA5C,EAII,EAJJA,QACAC,EAGI,EAHJA,MACA4C,EAEI,EAFJA,aACAC,EACI,EADJA,YAEA,OACE,qCACE,cAAC5C,EAAA,EAAD,UACE,uDAEF,eAAC,GAAD,WACE,eAACmC,GAAD,CAAMU,SAAUF,EAAhB,UACE,cAACN,GAAD,CACES,KAAK,OACLC,YAAY,gBACZC,MAAON,EACPO,SAAUL,IAEZ,cAACP,GAAD,CAAOS,KAAK,SAASE,MAAM,SAASE,MAAO,CAAEC,OAAQ,gBAEtDrD,EACC,cAAC,GAAD,IAEA,sCACe,OAAZ0C,QAAY,IAAZA,OAAA,EAAAA,EAAchD,QAAS,EACtB,cAAC,GAAD,CAASrB,MAAM,gBAAf,SACGqE,EAAavC,KAAI,SAACC,GAAD,aAChB,cAAC,GAAD,CAEEhB,GAAIgB,EAAMhB,GACVC,SAAUe,EAAMC,YAChBhC,MAAO+B,EAAME,eACbhB,OAAQc,EAAMG,aACdhB,KAAI,OAAEa,QAAF,IAAEA,GAAF,UAAEA,EAAOI,oBAAT,aAAE,EAAqBb,UAAU,EAAG,GACxCH,SAAS,GANJY,EAAMhB,SAUf,MACM,OAATuD,QAAS,IAATA,OAAA,EAAAA,EAAWjD,QAAS,EACnB,cAAC,GAAD,CAASrB,MAAM,aAAf,SACGsE,EAAUxC,KAAI,SAACmD,GAAD,aACb,cAAC,GAAD,CAEElE,GAAIkE,EAAQlE,GACZC,SAAUiE,EAAQjD,YAClBhC,MAAOiF,EAAQC,cACfjE,OAAQgE,EAAQ/C,aAChBhB,KAAI,OAAE+D,QAAF,IAAEA,GAAF,UAAEA,EAASE,sBAAX,aAAE,EAAyB7D,UAAU,EAAG,GAC5CH,SAAS,GANJ8D,EAAQlE,SAUjB,QAGPa,EAAQ,cAAC,GAAD,CAASpB,KAAMoB,EAAOtB,MAAM,YAAe,KAC1B,KAAb,OAAZ+D,QAAY,IAAZA,OAAA,EAAAA,EAAchD,SAAsC,KAAb,OAATiD,QAAS,IAATA,OAAA,EAAAA,EAAWjD,QACxC,cAAC,GAAD,CAASb,KAAI,mBAAsBF,MAAM,YACvC,YClFG8E,GCES,WAAO,IAAD,EACYlC,mBAAS,MADrB,mBACrBmB,EADqB,KACPgB,EADO,OAEMnC,mBAAS,MAFf,mBAErBoB,EAFqB,KAEVgB,EAFU,OAGQpC,mBAAS,IAHjB,mBAGrBqB,EAHqB,KAGTgB,EAHS,OAIErC,oBAAS,GAJX,mBAIrBvB,EAJqB,KAIZ2B,EAJY,OAKFJ,mBAAS,IALP,mBAKrBtB,EALqB,KAKd2B,EALc,KAOtBiC,EAAY,uCAAG,kCAAA/B,EAAA,sEAEjBH,GAAW,GAFM,SAKPX,GAAgB4B,GALT,uBAIEF,EAJF,EAIfV,KAAQC,QAJO,SAQPZ,GAAauB,GARN,gBAOED,EAPF,EAOfX,KAAQC,QAEVyB,EAAgBhB,GAChBiB,EAAahB,GAVI,kDAYjBf,EAAS,8BAZQ,yBAcjBD,GAAW,GACXiC,EAAc,IAfG,6EAAH,qDAiClB,OACE,cAAC,GAAD,CACElB,aAAcA,EACdC,UAAWA,EACXC,WAAYA,EACZ5C,QAASA,EACTC,MAAOA,EACP4C,aArBiB,SAACiB,GACpBA,EAAMC,iBACFnB,EAAWlD,QACbmE,KAmBAf,YAfgB,SAACgB,GAAW,IAElBZ,EACRY,EADFE,OAAUd,MAEZU,EAAcV,OCjCZnF,GAAYf,IAAOgB,IAAV,8CA6EAiG,GAzEK,SAAC,GAAwD,IAAtDC,EAAqD,EAArDA,YAAaC,EAAwC,EAAxCA,SAAUpE,EAA8B,EAA9BA,QAASC,EAAqB,EAArBA,QAASC,EAAY,EAAZA,MAC9D,OACE,qCACE,cAACC,EAAA,EAAD,UACE,yDAEDF,EACC,cAAC,GAAD,IAEA,eAAC,GAAD,YACW,OAARmE,QAAQ,IAARA,OAAA,EAAAA,EAAUzE,QAAS,EAClB,cAAC,GAAD,CAASrB,MAAM,qBAAf,SACG8F,EAAShE,KAAI,SAACmD,GAAD,aACZ,cAAC,GAAD,CAEElE,GAAIkE,EAAQlE,GACZC,SAAUiE,EAAQjD,YAClBhC,MAAOiF,EAAQC,cACfjE,OAAQgE,EAAQ/C,aAChBhB,KAAI,OAAE+D,QAAF,IAAEA,GAAF,UAAEA,EAASE,sBAAX,aAAE,EAAyB7D,UAAU,EAAG,GAC5CH,SAAS,GANJ8D,EAAQlE,SAUjB,MACI,OAAPW,QAAO,IAAPA,OAAA,EAAAA,EAASL,QAAS,EACjB,cAAC,GAAD,CAASrB,MAAM,mBAAf,SACG0B,EAAQI,KAAI,SAACmD,GAAD,aACX,cAAC,GAAD,CAEElE,GAAIkE,EAAQlE,GACZC,SAAUiE,EAAQjD,YAClBhC,MAAOiF,EAAQC,cACfjE,OAAQgE,EAAQ/C,aAChBhB,KAAI,OAAE+D,QAAF,IAAEA,GAAF,UAAEA,EAASE,sBAAX,aAAE,EAAyB7D,UAAU,EAAG,GAC5CH,SAAS,GANJ8D,EAAQlE,SAUjB,MACQ,OAAX8E,QAAW,IAAXA,OAAA,EAAAA,EAAaxE,QAAS,EACrB,cAAC,GAAD,CAASrB,MAAM,mBAAf,SACG6F,EAAY/D,KAAI,SAACmD,GAAD,aACf,cAAC,GAAD,CAEElE,GAAIkE,EAAQlE,GACZC,SAAUiE,EAAQjD,YAClBhC,MAAOiF,EAAQC,cACfjE,OAAQgE,EAAQ/C,aAChBhB,KAAI,OAAE+D,QAAF,IAAEA,GAAF,UAAEA,EAASE,sBAAX,aAAE,EAAyB7D,UAAU,EAAG,GAC5CH,SAAS,GANJ8D,EAAQlE,SAUjB,KACHa,EAAQ,cAAC,GAAD,CAASpB,KAAMoB,EAAOtB,MAAM,YAAe,YCjE/CyF,GCEK,WAAO,IAAD,EACc7C,mBAAS,MADvB,mBACjB2C,EADiB,KACJG,EADI,OAEQ9C,mBAAS,MAFjB,mBAEjB4C,EAFiB,KAEPG,EAFO,OAGM/C,mBAAS,MAHf,mBAGjBxB,EAHiB,KAGR2B,EAHQ,OAIMH,oBAAS,GAJf,mBAIjBvB,EAJiB,KAIR2B,EAJQ,OAKEJ,mBAAS,IALX,mBAKjBtB,EALiB,KAKV2B,EALU,KAkCxB,OA3BAC,qBAAU,YACQ,uCAAG,sCAAAC,EAAA,6DACjBH,GAAW,GADM,kBAMLN,KANK,uBAKIkD,EALJ,EAKbvC,KAAQC,QALK,SASLZ,KATK,uBAQImD,EARJ,EAQbxC,KAAQC,QARK,UAYLZ,KAZK,iBAWIoD,EAXJ,EAWbzC,KAAQC,QAEVoC,EAAeE,GACfD,EAAYE,GACZ9C,EAAW+C,GAfI,kDAiBf7C,EAAS,iCAjBM,yBAmBfD,GAAW,GAnBI,6EAAH,qDAuBhB+C,KACC,IAGD,cAAC,GAAD,CACER,YAAaA,EACbC,SAAUA,EACVpE,QAASA,EACTC,QAASA,EACTC,MAAOA,KCtCPlC,GAAYf,IAAOgB,IAAV,oHAOT2G,GAAW3H,IAAOgB,IAAV,kQAMY,SAACV,GAAD,OAAWA,EAAMsH,SAQrCC,GAAU7H,IAAOgB,IAAV,qHAQP8G,GAAQ9H,IAAOgB,IAAV,oLAEe,SAACV,GAAD,OAAWA,EAAMsH,SAOrCG,GAAO/H,IAAOgB,IAAV,iEAKJC,GAAQjB,IAAOgI,GAAV,6FAMLC,GAAgBjI,IAAOgB,IAAV,mFAMbkH,GAAWlI,IAAOkB,KAAV,0BAERiH,GAAUnI,IAAOkB,KAAV,+CAIPkH,GAAWpI,IAAOqI,EAAV,uGAgFCC,GAzES,SAAC,GAAyC,IAAD,EAAtCC,EAAsC,EAAtCA,OAAQvF,EAA8B,EAA9BA,QAAgBR,GAAc,EAArBS,MAAqB,EAAdT,SACjD,OAAOQ,EACL,qCACE,cAAC,GAAD,IACA,cAACE,EAAA,EAAD,UACE,2DAIJ,eAAC,GAAD,WACE,cAACA,EAAA,EAAD,UACE,kCACGV,EAAU+F,EAAOjF,eAAiBiF,EAAOhC,cAD5C,kBAIF,cAACoB,GAAD,CACEC,OACQ,OAANW,QAAM,IAANA,OAAA,EAAAA,EAAQC,eAAR,6CAC0CD,EAAOC,eAC7C/F,KAGR,eAACoF,GAAD,WACE,cAACC,GAAD,CACEF,OACQ,OAANW,QAAM,IAANA,OAAA,EAAAA,EAAQlF,aAAR,6CAC0CkF,EAAOlF,aAC7CZ,KAGR,eAACsF,GAAD,WACE,cAAC,GAAD,UACGvF,EAAU+F,EAAOjF,eAAiBiF,EAAOhC,gBAE5C,eAAC0B,GAAD,WACE,cAACC,GAAD,UACGK,EAAO/E,aACJ+E,EAAO/E,aAAab,UAAU,EAAG,GACjC4F,EAAO/B,eAAe7D,UAAU,EAAG,KAEzC,cAACwF,GAAD,mBACA,eAACD,GAAD,WACGK,EAAOE,QACJF,EAAOE,QACPF,EAAOG,kBACPH,EAAOG,iBAAiB,GACtBH,EAAOG,iBAAiB,GAE1B,KAAM,IAPZ,SAUA,cAACP,GAAD,mBACA,cAACD,GAAD,oBACGK,EAAOI,cADV,aACG,EAAexF,KAAI,SAACyF,EAAOC,GAAR,OAClBA,IAAUN,EAAOI,OAAOjG,OAAS,EAC7BkG,EAAME,KADV,UAEOF,EAAME,KAFb,eAMN,cAACV,GAAD,UAAWG,EAAOQ,qBCpIbC,GCES,SAAC1I,GAAW,IAAD,EACLiE,mBAAS,MADJ,mBAC1BgE,EAD0B,KAClBU,EADkB,OAEH1E,oBAAS,GAFN,mBAE1BvB,EAF0B,KAEjB2B,EAFiB,OAGPJ,mBAAS,IAHF,mBAG1BtB,EAH0B,KAGnB2B,EAHmB,KAOnBxC,EAIV9B,EALF4I,MACErF,OAAUzB,GAED+G,EAET7I,EAFF8I,QAAWD,KACCvI,EACVN,EADFO,SAAYD,SAGR4B,EAAU5B,EAASyI,SAAS,WAiClC,OA/BAC,QAAQC,IAAIjJ,GAEZuE,qBAAU,WACR,IAOM2E,EAAO,uCAAG,kCAAA1E,EAAA,yDACR2E,EAAWC,OAAOtH,GACpBmG,EAAS,KAFC,UAIR/F,EAJQ,iCAKgBwB,GAAqByF,GALrC,gBAKDlB,EALC,EAKPvD,KALO,yCAOgBX,GAAeoF,GAP/B,iBAODlB,EAPC,EAOPvD,KAPO,QASZiE,EAAUV,GATE,kDAWZ3D,EAAS,8BAXG,yBAaZD,GAAW,GAbC,6EAAH,sDAPM,WACjB,IAAM8E,EAAWC,OAAOtH,GACxB,GAAIuH,MAAMF,GACDN,EAAK,KAqBhBS,GACAJ,MACC,CAACpH,EAAII,EAAS2G,EAAMvI,IAGrB,cAAC,GAAD,CACE2H,OAAQA,EACRvF,QAASA,EACTC,MAAOA,EACPT,QAASA,KCpCAqH,GAbG,WAChB,OACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWC,KACjC,cAAC,IAAD,CAAOF,KAAK,UAAUC,UAAWE,KACjC,cAAC,IAAD,CAAOJ,OAAK,EAACC,KAAK,MAAMC,UAAWG,KACnC,cAAC,IAAD,CAAOJ,KAAK,aAAaC,UAAWI,KACpC,cAAC,IAAD,CAAOL,KAAK,UAAUC,UAAWI,KACjC,cAAC,IAAD,CAAUC,KAAK,IAAIvJ,GAAG,U,SCabwJ,GAxBMC,YAAH,6eACfC,MCYYC,GAVH,WACV,OACE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,QCPNC,IAASC,OACL,cAAC,GAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.fd9492d8.chunk.js","sourcesContent":["import { Link, withRouter } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst NavHeader = styled.header`\r\n  color: white;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 50px;\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 0 10px;\r\n  font-size: 1.3rem;\r\n  z-index: 10;\r\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\r\n`;\r\n\r\nconst List = styled.ul`\r\n  display: flex;\r\n`;\r\n\r\nconst Item = styled.li`\r\n  width: 90px;\r\n  text-align: center;\r\n  border-bottom: 5px solid\r\n    ${(props) => (props.current ? \"#9b59b6\" : \"transparent\")};\r\n  transition: border-bottom 0.5s ease-in-out;\r\n`;\r\n\r\nconst NavLink = styled(Link)`\r\n  height: 50px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Header = withRouter(({ location: { pathname } }) => (\r\n  <NavHeader>\r\n    <List>\r\n      <Item current={pathname === \"/\"}>\r\n        <NavLink to=\"/\">Movies</NavLink>\r\n      </Item>\r\n      <Item current={pathname === \"/tv\"}>\r\n        <NavLink to=\"/tv\">TV</NavLink>\r\n      </Item>\r\n      <Item current={pathname === \"/search\"}>\r\n        <NavLink to=\"/search\">Search</NavLink>\r\n      </Item>\r\n    </List>\r\n  </NavHeader>\r\n));\r\n\r\nexport default Header;\r\n","import styled from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Container = styled.div`\r\n  :not(:last-child) {\r\n    margin-bottom: 50px;\r\n  }\r\n`;\r\n\r\nconst Title = styled.span`\r\n  font-size: 20px;\r\n  font-weight: 600;\r\n`;\r\n\r\nconst Grid = styled.div`\r\n  margin-top: 25px;\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, 125px);\r\n  grid-gap: 25px;\r\n`;\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <Container>\r\n      <Title>{title}</Title>\r\n      <Grid>{children}</Grid>\r\n    </Container>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(Section),\r\n    PropTypes.objectOf(Section),\r\n  ]),\r\n};\r\n\r\nexport default Section;\r\n","import styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  height: 100vh;\r\n  width: 100vw;\r\n  display: flex;\r\n  font-size: 3vw;\r\n  justify-content: center;\r\n  margin-top: 40vh;\r\n`;\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <Container>\r\n      <span role=\"img\" aria-label=\"Loading\">\r\n        ⏱\r\n      </span>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  width: 100vw;\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Text = styled.span`\r\n  font-weight: 600;\r\n  font-size: 40px;\r\n  color: ${(props) => props.color};\r\n`;\r\n\r\nconst Message = ({ text, color }) => {\r\n  return (\r\n    <Container>\r\n      <Text color={color}>{text}</Text>\r\n    </Container>\r\n  );\r\n};\r\n\r\nMessage.propTypes = {\r\n  text: PropTypes.string.isRequired,\r\n  color: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Message;\r\n","export default __webpack_public_path__ + \"static/media/noPosterSmall.31ee8645.jpg\";","import styled from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport noPoster from \"assets/noPosterSmall.jpg\";\r\n\r\nconst Container = styled.div`\r\n  font-size: 1rem;\r\n`;\r\n\r\nconst Image = styled.div`\r\n  background-image: url(${(props) => `${props.bgUrl}`});\r\n  height: 180px;\r\n  background-size: cover;\r\n  border-radius: 6px;\r\n  background-position: center center;\r\n  transition: opacity 0.1s linear;\r\n`;\r\n\r\nconst Rating = styled.span`\r\n  bottom: 5px;\r\n  position: absolute;\r\n  right: 5px;\r\n  opacity: 0;\r\n  transition: opacity 0.1s linear;\r\n`;\r\n\r\nconst ImageContainer = styled.div`\r\n  margin-bottom: 5px;\r\n  position: relative;\r\n  &:hover {\r\n    ${Image} {\r\n      opacity: 0.3;\r\n    }\r\n    ${Rating} {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Title = styled.span`\r\n  display: block;\r\n  margin-bottom: 3px;\r\n  line-height: 14px;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n`;\r\n\r\nconst Year = styled.span`\r\n  font-size: 0.7rem;\r\n  color: rgba(255, 255, 255, 0.4);\r\n`;\r\n\r\nconst Poster = ({ id, imageURL, title, rating, year, isMovie }) => {\r\n  return (\r\n    <Link to={isMovie ? `/movie/${id}` : `/tv/${id}`}>\r\n      <Container>\r\n        <ImageContainer>\r\n          <Image\r\n            bgUrl={\r\n              imageURL ? `https://image.tmdb.org/t/p/w300${imageURL}` : noPoster\r\n            }\r\n          />\r\n          <Rating>\r\n            <span role=\"img\" aria-label=\"rating\">\r\n              ⭐\r\n            </span>\r\n            &nbsp;{rating}/10\r\n          </Rating>\r\n        </ImageContainer>\r\n        <Title>\r\n          {title.length > 12 ? `${title.substring(0, 12)}...` : title}\r\n        </Title>\r\n        <Year>{year}</Year>\r\n      </Container>\r\n    </Link>\r\n  );\r\n};\r\n\r\nPoster.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  imageURL: PropTypes.string,\r\n  title: PropTypes.string.isRequired,\r\n  rating: PropTypes.number.isRequired,\r\n  year: PropTypes.string,\r\n  isMovie: PropTypes.bool,\r\n};\r\n\r\nexport default Poster;\r\n","import PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport Section from \"Components/Section\";\r\nimport Loader from \"Components/Loader\";\r\nimport Message from \"Components/Message\";\r\nimport Poster from \"Components/Poster\";\r\n\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nconst HomePresenter = ({ nowPlaying, upcoming, popular, loading, error }) => {\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Movies | Curleex</title>\r\n      </Helmet>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : (\r\n        <Container>\r\n          {nowPlaying?.length > 0 ? (\r\n            <Section title=\"Now Playing\">\r\n              {nowPlaying.map((movie) => (\r\n                <Poster\r\n                  key={movie.id}\r\n                  id={movie.id}\r\n                  imageURL={movie.poster_path}\r\n                  title={movie.original_title}\r\n                  rating={movie.vote_average}\r\n                  year={movie?.release_date?.substring(0, 4)}\r\n                  isMovie={true}\r\n                />\r\n              ))}\r\n            </Section>\r\n          ) : null}\r\n          {upcoming?.length > 0 ? (\r\n            <Section title=\"Upcoming Movies\">\r\n              {upcoming.map((movie) => (\r\n                <Poster\r\n                  key={movie.id}\r\n                  id={movie.id}\r\n                  imageURL={movie.poster_path}\r\n                  title={movie.original_title}\r\n                  rating={movie.vote_average}\r\n                  year={movie.release_date?.substring(0, 4)}\r\n                  isMovie={true}\r\n                />\r\n              ))}\r\n            </Section>\r\n          ) : null}\r\n          {popular?.length > 0 ? (\r\n            <Section title=\"Popular Movies\">\r\n              {popular.map((movie) => (\r\n                <Poster\r\n                  key={movie.id}\r\n                  id={movie.id}\r\n                  imageURL={movie.poster_path}\r\n                  title={movie.original_title}\r\n                  rating={movie.vote_average}\r\n                  year={movie.release_date?.substring(0, 4)}\r\n                  isMovie={true}\r\n                />\r\n              ))}\r\n            </Section>\r\n          ) : null}\r\n          {error ? <Message text={error} color=\"#e74c3c\" /> : null}\r\n        </Container>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nHomePresenter.propTypes = {\r\n  /*nowPlaying: PropTypes.array.isRequired,\r\n  upcoming: PropTypes.array.isRequired,\r\n  popular: PropTypes.array.isRequired,\r\n  */\r\n  nowPlaying: PropTypes.array,\r\n  upcoming: PropTypes.array,\r\n  popular: PropTypes.array,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string,\r\n};\r\n\r\nexport default HomePresenter;\r\n","import axios from \"axios\";\r\n\r\nconst API = axios.create({\r\n  baseURL: \"https://api.themoviedb.org/3/\",\r\n  params: {\r\n    api_key: \"be643e400993a9ad45ae67fe86b7ba54\",\r\n    language: \"en-US\",\r\n  },\r\n});\r\n\r\nexport const MovieAPI = {\r\n  nowPlaying: () => API.get(\"movie/now_playing\"),\r\n  upcoming: () => API.get(\"movie/upcoming\"),\r\n  popular: () => API.get(\"movie/popular\"),\r\n  movieDetail: (id) =>\r\n    API.get(`movie/${id}`, {\r\n      params: {\r\n        append_to_response: \"videos\",\r\n      },\r\n    }),\r\n  search: (term) =>\r\n    API.get(\"search/movie\", {\r\n      params: {\r\n        query: term,\r\n      },\r\n    }),\r\n};\r\n\r\nexport const TVAPI = {\r\n  topRated: () => API.get(\"tv/top_rated\"),\r\n  popular: () => API.get(\"tv/popular\"),\r\n  airingToday: () => API.get(\"tv/airing_today\"),\r\n  tvDetail: (id) =>\r\n    API.get(`tv/${id}`, {\r\n      params: {\r\n        append_to_response: \"videos\",\r\n      },\r\n    }),\r\n  search: (term) =>\r\n    API.get(\"search/tv\", {\r\n      params: {\r\n        query: term,\r\n      },\r\n    }),\r\n};\r\n","import HomeContainer from \"./HomeContainer\";\r\n\r\nexport default HomeContainer;\r\n","import HomePresenter from \"./HomePresenter\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { MovieAPI } from \"Components/API\";\r\n\r\nconst HomeContainer = () => {\r\n  const [nowPlaying, setNowPlaying] = useState(null);\r\n  const [upcoming, setUpcoming] = useState(null);\r\n  const [popular, setPopular] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const getMovieDatas = async () => {\r\n      setLoading(true);\r\n\r\n      try {\r\n        const {\r\n          data: { results: nowPlayingMovies },\r\n        } = await MovieAPI.nowPlaying();\r\n        const {\r\n          data: { results: upcomingMovies },\r\n        } = await MovieAPI.upcoming();\r\n        const {\r\n          data: { results: popularMovies },\r\n        } = await MovieAPI.popular();\r\n        setNowPlaying(nowPlayingMovies);\r\n        setUpcoming(upcomingMovies);\r\n        setPopular(popularMovies);\r\n      } catch (error) {\r\n        setError(\"Cannot find movies information...\");\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    getMovieDatas();\r\n  }, []);\r\n\r\n  return (\r\n    <HomePresenter\r\n      nowPlaying={nowPlaying}\r\n      upcoming={upcoming}\r\n      popular={popular}\r\n      loading={loading}\r\n      error={error}\r\n    />\r\n  );\r\n};\r\n\r\nexport default HomeContainer;\r\n","import PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport Loader from \"Components/Loader\";\r\nimport Section from \"Components/Section\";\r\nimport Message from \"Components/Message\";\r\nimport Poster from \"Components/Poster\";\r\n\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nconst Form = styled.form`\r\n  margin-bottom: 50px;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  all: unset;\r\n  font-size: 25px;\r\n`;\r\n\r\nconst SearchPresenter = ({\r\n  movieResults,\r\n  tvResults,\r\n  searchTerm,\r\n  loading,\r\n  error,\r\n  handleSubmit,\r\n  handleInput,\r\n}) => {\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Search | Curleex</title>\r\n      </Helmet>\r\n      <Container>\r\n        <Form onSubmit={handleSubmit}>\r\n          <Input\r\n            type=\"text\"\r\n            placeholder=\"Input Search.\"\r\n            value={searchTerm}\r\n            onChange={handleInput}\r\n          />\r\n          <Input type=\"submit\" value=\"Search\" style={{ cursor: \"pointer\" }} />\r\n        </Form>\r\n        {loading ? (\r\n          <Loader />\r\n        ) : (\r\n          <>\r\n            {movieResults?.length > 0 ? (\r\n              <Section title=\"Movie Results\">\r\n                {movieResults.map((movie) => (\r\n                  <Poster\r\n                    key={movie.id}\r\n                    id={movie.id}\r\n                    imageURL={movie.poster_path}\r\n                    title={movie.original_title}\r\n                    rating={movie.vote_average}\r\n                    year={movie?.release_date?.substring(0, 4)}\r\n                    isMovie={true}\r\n                  />\r\n                ))}\r\n              </Section>\r\n            ) : null}\r\n            {tvResults?.length > 0 ? (\r\n              <Section title=\"TV Results\">\r\n                {tvResults.map((program) => (\r\n                  <Poster\r\n                    key={program.id}\r\n                    id={program.id}\r\n                    imageURL={program.poster_path}\r\n                    title={program.original_name}\r\n                    rating={program.vote_average}\r\n                    year={program?.first_air_date?.substring(0, 4)}\r\n                    isMovie={false}\r\n                  />\r\n                ))}\r\n              </Section>\r\n            ) : null}\r\n          </>\r\n        )}\r\n        {error ? <Message text={error} color=\"#e74c3c\" /> : null}\r\n        {movieResults?.length === 0 && tvResults?.length === 0 ? (\r\n          <Message text={`Nothing Found...`} color=\"#9b59b6\" />\r\n        ) : null}\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nSearchPresenter.propTypes = {\r\n  movieResults: PropTypes.array.isRequired,\r\n  tvResults: PropTypes.array.isRequired,\r\n  searchTerm: PropTypes.string,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string,\r\n  handleSubmit: PropTypes.func.isRequired,\r\n  handleInput: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default SearchPresenter;\r\n","import SearchContainer from \"./SearchContainer\";\r\n\r\nexport default SearchContainer;\r\n","import { useState } from \"react\";\r\nimport SearchPresenter from \"./SearchPresenter\";\r\nimport { TVAPI, MovieAPI } from \"Components/API\";\r\n\r\nconst SearchContainer = () => {\r\n  const [movieResults, setMovieResults] = useState(null);\r\n  const [tvResults, setTVResults] = useState(null);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const searchByTerm = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const {\r\n        data: { results: movieResults },\r\n      } = await MovieAPI.search(searchTerm);\r\n      const {\r\n        data: { results: tvResults },\r\n      } = await TVAPI.search(searchTerm);\r\n      setMovieResults(movieResults);\r\n      setTVResults(tvResults);\r\n    } catch {\r\n      setError(\"Cannot find Information...\");\r\n    } finally {\r\n      setLoading(false);\r\n      setSearchTerm(\"\");\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    if (searchTerm.length) {\r\n      searchByTerm();\r\n    }\r\n  };\r\n\r\n  const handleInput = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setSearchTerm(value);\r\n  };\r\n\r\n  return (\r\n    <SearchPresenter\r\n      movieResults={movieResults}\r\n      tvResults={tvResults}\r\n      searchTerm={searchTerm}\r\n      loading={loading}\r\n      error={error}\r\n      handleSubmit={handleSubmit}\r\n      handleInput={handleInput}\r\n    />\r\n  );\r\n};\r\n\r\nexport default SearchContainer;\r\n","import PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport Section from \"Components/Section\";\r\nimport Loader from \"Components/Loader\";\r\nimport Message from \"Components/Message\";\r\nimport Poster from \"Components/Poster\";\r\n\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nconst TVPresenter = ({ airingToday, topRated, popular, loading, error }) => {\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>TV Shows | Curleex</title>\r\n      </Helmet>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : (\r\n        <Container>\r\n          {topRated?.length > 0 ? (\r\n            <Section title=\"Top Rated Programs\">\r\n              {topRated.map((program) => (\r\n                <Poster\r\n                  key={program.id}\r\n                  id={program.id}\r\n                  imageURL={program.poster_path}\r\n                  title={program.original_name}\r\n                  rating={program.vote_average}\r\n                  year={program?.first_air_date?.substring(0, 4)}\r\n                  isMovie={false}\r\n                />\r\n              ))}\r\n            </Section>\r\n          ) : null}\r\n          {popular?.length > 0 ? (\r\n            <Section title=\"Popular Programs\">\r\n              {popular.map((program) => (\r\n                <Poster\r\n                  key={program.id}\r\n                  id={program.id}\r\n                  imageURL={program.poster_path}\r\n                  title={program.original_name}\r\n                  rating={program.vote_average}\r\n                  year={program?.first_air_date?.substring(0, 4)}\r\n                  isMovie={false}\r\n                />\r\n              ))}\r\n            </Section>\r\n          ) : null}\r\n          {airingToday?.length > 0 ? (\r\n            <Section title=\"Today's Programs\">\r\n              {airingToday.map((program) => (\r\n                <Poster\r\n                  key={program.id}\r\n                  id={program.id}\r\n                  imageURL={program.poster_path}\r\n                  title={program.original_name}\r\n                  rating={program.vote_average}\r\n                  year={program?.first_air_date?.substring(0, 4)}\r\n                  isMovie={false}\r\n                />\r\n              ))}\r\n            </Section>\r\n          ) : null}\r\n          {error ? <Message text={error} color=\"#e74c3c\" /> : null}\r\n        </Container>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nTVPresenter.propTypes = {\r\n  toprated: PropTypes.array,\r\n  popular: PropTypes.array,\r\n  airingToday: PropTypes.array,\r\n  /*toprated: PropTypes.array.isRequired,\r\n  popular: PropTypes.array.isRequired,\r\n  airingToday: PropTypes.array.isRequired,*/\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string,\r\n};\r\n\r\nexport default TVPresenter;\r\n","import TVContainer from \"./TVContainer\";\r\n\r\nexport default TVContainer;\r\n","import TVPresenter from \"./TVPresenter\";\r\nimport { TVAPI } from \"Components/API\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst TVContainer = () => {\r\n  const [airingToday, setAiringToday] = useState(null);\r\n  const [topRated, setTopRated] = useState(null);\r\n  const [popular, setPopular] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const getTVDatas = async () => {\r\n      setLoading(true);\r\n\r\n      try {\r\n        const {\r\n          data: { results: airingTodayTVs },\r\n        } = await TVAPI.airingToday();\r\n        const {\r\n          data: { results: topRatedTVs },\r\n        } = await TVAPI.topRated();\r\n        const {\r\n          data: { results: popularTVs },\r\n        } = await TVAPI.popular();\r\n        setAiringToday(airingTodayTVs);\r\n        setTopRated(topRatedTVs);\r\n        setPopular(popularTVs);\r\n      } catch (error) {\r\n        setError(\"Cannot find TV information...\");\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    getTVDatas();\r\n  }, []);\r\n\r\n  return (\r\n    <TVPresenter\r\n      airingToday={airingToday}\r\n      topRated={topRated}\r\n      popular={popular}\r\n      loading={loading}\r\n      error={error}\r\n    />\r\n  );\r\n};\r\n\r\nexport default TVContainer;\r\n","import PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport Loader from \"Components/Loader\";\r\nimport noPoster from \"assets/noPosterSmall.jpg\";\r\n\r\nconst Container = styled.div`\r\n  height: calc(100vh - 50px);\r\n  width: 100%;\r\n  position: relative;\r\n  padding: 50px;\r\n`;\r\n\r\nconst Backdrop = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-image: url(${(props) => props.bgImg});\r\n  background-position: center center;\r\n  background-size: cover;\r\n  filter: blur(3px);\r\n  opacity: 0.5;\r\n  z-index: 0;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  z-index: 1;\r\n`;\r\n\r\nconst Cover = styled.div`\r\n  width: 30%;\r\n  background-image: url(${(props) => props.bgImg});\r\n  background-position: center center;\r\n  background-size: cover;\r\n  height: 100%;\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst Data = styled.div`\r\n  width: 70%;\r\n  margin-left: 20px;\r\n`;\r\n\r\nconst Title = styled.h3`\r\n  display: block;\r\n  font-size: 3rem;\r\n  margin: 10px 0 20px 0;\r\n`;\r\n\r\nconst InfoContainer = styled.div`\r\n  display: flex;\r\n  font-size: 1rem;\r\n  margin: 20px;\r\n`;\r\n\r\nconst InfoItem = styled.span``;\r\n\r\nconst Divider = styled.span`\r\n  margin: 0 10px;\r\n`;\r\n\r\nconst Overview = styled.p`\r\n  font-size: 1.5rem;\r\n  line-height: 1.5;\r\n  width: 70%;\r\n  opacity: 0.8;\r\n`;\r\n\r\nconst DetailPresenter = ({ result, loading, error, isMovie }) => {\r\n  return loading ? (\r\n    <>\r\n      <Loader />\r\n      <Helmet>\r\n        <title>Loading | Curleex</title>\r\n      </Helmet>\r\n    </>\r\n  ) : (\r\n    <Container>\r\n      <Helmet>\r\n        <title>\r\n          {isMovie ? result.original_title : result.original_name} | Curleex\r\n        </title>\r\n      </Helmet>\r\n      <Backdrop\r\n        bgImg={\r\n          result?.backdrop_path\r\n            ? `https://image.tmdb.org/t/p/original${result.backdrop_path}`\r\n            : noPoster\r\n        }\r\n      ></Backdrop>\r\n      <Content>\r\n        <Cover\r\n          bgImg={\r\n            result?.poster_path\r\n              ? `https://image.tmdb.org/t/p/original${result.poster_path}`\r\n              : noPoster\r\n          }\r\n        />\r\n        <Data>\r\n          <Title>\r\n            {isMovie ? result.original_title : result.original_name}\r\n          </Title>\r\n          <InfoContainer>\r\n            <InfoItem>\r\n              {result.release_date\r\n                ? result.release_date.substring(0, 4)\r\n                : result.first_air_date.substring(0, 4)}\r\n            </InfoItem>\r\n            <Divider>·</Divider>\r\n            <InfoItem>\r\n              {result.runtime\r\n                ? result.runtime\r\n                : result.episode_run_time\r\n                ? result.episode_run_time[0]\r\n                  ? result.episode_run_time[0]\r\n                  : \"??\"\r\n                : \"??\"}{\" \"}\r\n              min\r\n            </InfoItem>\r\n            <Divider>·</Divider>\r\n            <InfoItem>\r\n              {result.genres?.map((genre, index) =>\r\n                index === result.genres.length - 1\r\n                  ? genre.name\r\n                  : `${genre.name} / `\r\n              )}\r\n            </InfoItem>\r\n          </InfoContainer>\r\n          <Overview>{result.overview}</Overview>\r\n        </Data>\r\n      </Content>\r\n    </Container>\r\n  );\r\n};\r\n\r\nDetailPresenter.propTypes = {\r\n  result: PropTypes.object.isRequired,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string,\r\n};\r\n\r\nexport default DetailPresenter;\r\n","import DetailContainer from \"./DetailContainer\";\r\n\r\nexport default DetailContainer;\r\n","import DetailPresenter from \"./DetailPresenter\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { MovieAPI, TVAPI } from \"Components/API\";\r\n\r\nconst DetailContainer = (props) => {\r\n  const [result, setResult] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const {\r\n    match: {\r\n      params: { id },\r\n    },\r\n    history: { push },\r\n    location: { pathname },\r\n  } = props;\r\n\r\n  const isMovie = pathname.includes(\"/movie/\");\r\n\r\n  console.log(props);\r\n\r\n  useEffect(() => {\r\n    const errorCheck = () => {\r\n      const parsedId = Number(id);\r\n      if (isNaN(parsedId)) {\r\n        return push(\"/\");\r\n      }\r\n    };\r\n\r\n    const getData = async () => {\r\n      const parsedId = Number(id);\r\n      let result = null;\r\n      try {\r\n        if (isMovie) {\r\n          ({ data: result } = await MovieAPI.movieDetail(parsedId));\r\n        } else {\r\n          ({ data: result } = await TVAPI.tvDetail(parsedId));\r\n        }\r\n        setResult(result);\r\n      } catch (error) {\r\n        setError(\"Cannot find information...\");\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    errorCheck();\r\n    getData();\r\n  }, [id, isMovie, push, pathname]);\r\n\r\n  return (\r\n    <DetailPresenter\r\n      result={result}\r\n      loading={loading}\r\n      error={error}\r\n      isMovie={isMovie}\r\n    />\r\n  );\r\n};\r\n\r\nexport default DetailContainer;\r\n","import { Route, Redirect, Switch } from \"react-router-dom\";\r\nimport Home from \"Routes/Home\";\r\nimport Search from \"Routes/Search\";\r\nimport TV from \"Routes/TV\";\r\nimport Detail from \"Routes/Detail\";\r\n\r\nconst AppRouter = () => {\r\n  return (\r\n    <Switch>\r\n      <Route exact path=\"/\" component={Home} />\r\n      <Route path=\"/search\" component={Search} />\r\n      <Route exact path=\"/tv\" component={TV} />\r\n      <Route path=\"/movie/:id\" component={Detail} />\r\n      <Route path=\"/tv/:id\" component={Detail} />\r\n      <Redirect from=\"*\" to=\"/\" />\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","import { createGlobalStyle } from \"styled-components\";\r\nimport reset from \"styled-reset\";\r\n\r\nconst GlobalStyles = createGlobalStyle`\r\n\t${reset};\r\n\ta{\r\n\t\ttext-decoration:none;\r\n\t\tcolor:inherit;\r\n\t}\r\n\t*{\r\n\t\tbox-sizing:border-box;\r\n\t}\r\n\tbody{\r\n\t\tfont-size:12px;\r\n\t\tbackground-color:rgba(20,20,20,1);\r\n\t\tfont-family:\"kdg_Light\";\r\n\t\tcolor:white;\r\n\t\tpadding-top:50px;\r\n\t}\r\n\t@font-face {\r\n\t\tfont-family: 'kdg_Light';\r\n\t\tsrc: url('https://cdn.jsdelivr.net/gh/projectnoonnu/noonfonts-20-12@1.0/kdg_Light.woff') format('woff');\r\n\t\tfont-weight: normal;\r\n\t\tfont-style: normal;\r\n\t}\r\n`;\r\n\r\nexport default GlobalStyles;\r\n","import React from \"react\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport Header from \"Components/Header\";\nimport AppRouter from \"Components/Router\";\nimport GlobalStyles from \"./GlobalStyles\";\n\nconst App = () => {\n  return (\n    <Router>\n      <Header />\n      <AppRouter />\n      <GlobalStyles />\n    </Router>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"Components/App\";\n\nReactDOM.render(\n    <App />,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}